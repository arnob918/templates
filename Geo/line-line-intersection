/*Description:
If a unique intersection point of the lines going through
s1,e1 and s2,e2 exists r is set to this point and 1 is
turned. If no intersection point exists 0 is returned and if
infinitely many exists -1 is returned. If s1==e1 or s2==e2
-1 is returned. The wrong position will be returned if P is
Point<int> and the intersection point does not have in-
teger coordinates. Products of three coordinates are used
in intermediate steps so watch out for overflow if using
int or long long.
*/
int line_line_intersection(point a, point b, point c, point d, point &r) {
	if(fabs(cross(a - c, c - d)) < eps && fabs(cross(b - c, c - d)) < eps) return -1;
    double a1 = a.y - b.y, b1 = b.x - a.x, c1 = cross(a, b);
    double a2 = c.y - d.y, b2 = d.x - c.x, c2 = cross(c, d);
    double det = a1 * b2 - a2 * b1;
    if (det == 0) return 0;
    r = point((b1 * c2 - b2 * c1) / det, (c1 * a2 - a1 * c2) / det);
    return 1;
}
